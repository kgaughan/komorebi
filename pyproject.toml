#:schema https://json.schemastore.org/pyproject.json

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "komorebi"
dynamic = ["version"]
description = "A tumblelog engine"
readme = "README.rst"
requires-python = ">=3.11"
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "Keith Gaughan", email = "keith@gaughan.ie" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
# The versions are pegged with FreeBSD
dependencies = [
  "flask>=3.1.1,<4",
  "flask-httpauth>=4.8.0,<5",
  "flask-wtf~=1.2.1",
  "wtforms>=3.1.2,<4",
  "markdown>=3.8.2,<4",
  "passlib==1.7.4",
  "itsdangerous>=2.2.0,<3",
]

[project.urls]
Documentation = "https://github.com/kgaughan/komorebi#readme"
Issues = "https://github.com/kgaughan/komorebi/issues"
Source = "https://github.com/kgaughan/komorebi"

[dependency-groups]
dev = [
  "python-dotenv>=1.1.0",
  "mypy>=1.10.1",
  "pytest>=8.2.2",
  "pytest-cov>=2.12.1",
  "types-markdown>=3.6.0.20240316",
  "types-passlib>=1.7.7.20240327",
]

[tool.hatch.build.targets.sdist]
include = ["src/komorebi", "schema", "supervision", "uv.lock"]

[tool.hatch.build.targets.wheel]
packages = ["src/komorebi"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/komorebi/_version.py"

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py311"
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "A",
  # "ANN",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "EXE",
  "F",
  "FBT",
  "FLY",
  "FURB",
  "G",
  "I",
  "ICN",
  "ISC002",
  "LOG",
  "N",
  "PERF",
  "PIE",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  # "PT",
  "PYI",
  "Q",
  "RET",
  "RSE",
  "RUF",
  "S",
  "SIM",
  "SLOT",
  "T",
  "TC",
  "TID",
  "TRY",
  "UP",
  "W",
  "YTT",
]
ignore = [
  "PLR0913", # Too many arguments
  "PLR2004", # Magic value used in comparison
  "PLW2901", # Redefined loop variable
  "S310",    # Audit URL open for permitted schemes
  "S317",    # Using xml to parse untrusted data is known to be vulnerable to XML attacks; use defusedxml equivalents
  "TID252",  # Prefer absolute imports over relative imports from parent modules
  "UP006",   # Use {to} instead of {from} for type annotation
  "UP035",   # Deprecated import
  "EM101",   # Exceptions must not use strings
  "EM102",   # Exception must not use f-string literal
]

[tool.ruff.lint.isort]
force-sort-within-sections = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["ANN", "PLR2004", "S101", "TID252", "E501"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra --doctest-modules --cov=komorebi --junitxml=results.xml --cov-report html"
junit_logging = "out-err"
junit_family = "xunit2"
pythonpath = ["src"]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/komorebi/adjunct/*"]

[tool.coverage.report]
ignore_errors = true
# Regexes for lines to exclude from consideration
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "pass",
]

[tool.mypy]
ignore_missing_imports = true
